{"version":3,"sources":["components/Nav.jsx","components/Hero.jsx","components/About.jsx","components/Menu.jsx","components/Contact.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","href","title1","title2","name","title3","title4","Hero","src","About","Menu","componentDidMount","setState","entries","Entries","poems","selectItem","id","state","selected","isSelected","prevState","slected","this","map","e","key","onClick","title","class","content","p","Component","Contact","target","Footer","App","changeView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a33b4784.chunk.js","sourcesContent":["import React from 'react';\nimport './Nav.css';\n\nconst Nav = (props) => {\n  return (\n    <div className=\"nav\">\n      <a href=\"#about\"><div className=\"nav-item\">{props.title1}</div></a>\n      <a href=\"#work\"><div className=\"nav-item\">{props.title2}</div></a>\n      <div className=\"nav-name\">{props.name}</div>\n      <a href=\"#contact\"><div className=\"nav-item\">{props.title3}</div></a>\n      <a href=\"#contact\"><div className=\"nav-item\">{props.title4}</div></a>\n    </div>\n  )\n}\n\nexport default Nav;","import React from 'react';\nimport './Hero.css';\n\nexport default function Hero() {\n  return (\n    <>\n      <img className=\"hero-img\" src=\"https://i.imgur.com/qbXd7Zn.jpg\" />\n    </>\n  )\n}\n","import React from 'react';\nimport './About.css';\n\nexport default function About() {\n  return (\n    <div className=\"about-container\">\n      <div className=\"about-left\"></div>\n      <div className=\"about-right\">\n        <div className=\"section-title section-title-white\">Elbia Cespedes</div>\n        <div className=\"about-content\">\n          <p>She is a New York City based writer.</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport './Menu.css';\nimport Entries from '../data/poems.json';\n\nexport default class Menu extends Component {\n  constructor() {\n    super();\n    this.state = {\n      entries: null,\n      slected: null,\n      isSelected: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      entries: Entries.poems\n    });\n  }\n\n  selectItem = (id) => {\n    if (id === this.state.selected) {\n      this.setState({\n        selected: null,\n        isSelected: false\n      })\n    } else {\n      this.setState(prevState => ({\n        selected: id,\n        isSelected: !prevState.isSelected\n      }))\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"menu-container\">\n        <div className=\"menu-left\"></div>\n        <div className=\"menu-right\">\n          <div className=\"section-title\">Works</div>\n          {this.state.entries && this.state.entries.map(e =>\n            <div key={e.id} className=\"menu-item\">\n              <div className=\"menu-item-title\"\n                onClick={() => this.selectItem(e.id)}>\n                {e.title}\n                {e.id !== this.state.selected && <i class=\"angle down icon\"></i>}\n                {e.id === this.state.selected && this.state.isSelected && <i class=\"close icon\"></i>}\n              </div>\n\n              {\n                e.id === this.state.selected && this.state.isSelected &&\n                <div className=\"menu-item-content\">\n                  {e.content.map(p => <p>{p}</p>)}\n                </div>\n              }\n            </div>)}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport './Contact.css';\n\nexport default function Contact() {\n  return (\n    <div className=\"contact-container\">\n      <div className=\"contact-left\"></div>\n      <div className=\"contact-right\">\n        <div className=\"section-title\">Contact</div>\n        <div className=\"contact-content\">\n          <div className=\"contacy-item\">\n            <i class=\"envelope icon large\"></i>\n            <a\n              href=\"mailto:ec12990@gmail.com\"\n              target=\"_blank\">\n              <p>ec12990@gmail.com</p>\n            </a>\n          </div>\n          <div className=\"contacy-item\">\n            <i class=\"instagram icon large\"></i>\n            <a\n              href=\"https://www.instagram.com/thoughtsbyelbia_/\"\n              target=\"_blank\">\n              <p>@thoughtsbyelbia_</p>\n            </a>\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport './Footer.css';\n\nexport default function Footer() {\n  return (\n    <div>\n      <div className=\"copyright\">\n        <p>Â© 2020 Elbia Cespedes</p>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport Nav from './components/Nav';\nimport Hero from './components/Hero';\nimport About from './components/About';\nimport Menu from './components/Menu';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n\n  changeView = () => {\n\n  }\n  render() {\n    return (\n      <>\n        <Nav\n          name=\"Elbia\"\n          title1=\"About\"\n          title2=\"Works\"\n          title3=\"Contact\"\n          title4=\"Social\"\n          onClick={this.changeView}\n        />\n        <div className=\"page-hero\"><Hero /></div>\n        <div id=\"about\" className=\"page-about\"><About /></div>\n        <div id=\"work\" className=\"page-content\"><Menu /></div>\n        <div id=\"contact\" className=\"page-contact\"><Contact /></div>\n        <div className=\"page-footer\"><Footer /></div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}